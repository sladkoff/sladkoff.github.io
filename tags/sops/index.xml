<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sops on Leonid Koftun</title><link>https://blog.sldk.de/tags/sops/</link><description>Recent content in sops on Leonid Koftun</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Wed, 03 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.sldk.de/tags/sops/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling secrets in Flux v2 repositories with SOPS</title><link>https://blog.sldk.de/2021/03/handling-secrets-in-flux-v2-repositories-with-sops/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.sldk.de/2021/03/handling-secrets-in-flux-v2-repositories-with-sops/</guid><description>This is part 2 of my series on &amp;ldquo;GitOps with Flux v2&amp;rdquo;.
If you&amp;rsquo;re not familiar with what Flux is and how it helps you build GitOps workflows on Kubernetes, feel free to read part 1 here: &amp;ldquo;Introduction to GitOps on Kubernetes with Flux v2&amp;rdquo;.
In today&amp;rsquo;s guide we will look at Mozilla SOPS and learn how to incorporate it with Flux v2 to store encrypted secrets in our GitOps repositories and have Flux decrypt them automatically during deployments.</description></item></channel></rss>